import React, { Component } from "react";import { View, Text, Image, TouchableOpacity } from "react-native";import { Container, Content, Header, Button, Left, Body, Right, Card} from 'native-base'import styles from '../../assets/styles';import {NavigationEvents} from "react-navigation";import axios from "axios";import CONST from "../consts";import Spinner from "react-native-loading-spinner-overlay";import {connect} from "react-redux";class Term extends Component {	constructor(props){		super(props);		this.state={			terms		: [],			spinner     : true,		}	}	static navigationOptions = () => ({		header      : null,		drawerLabel : () => null ,	});	componentWillMount() {		this.setState({ spinner  : true });		const { id } = this.props.navigation.state.params;		axios({			url         : CONST.url + 'semsters',			method      : 'POST',			data		: { year_id : id},			headers     : { Authorization: this.props.user.token },		}).then(response => {			this.setState({ spinner  : false, terms: response.data.data })		});	}	onFocus(){		this.componentWillMount()	}	render() {		const { name } = this.props.navigation.state.params;		return (			<Container>				<Spinner visible = { this.state.spinner } />				<NavigationEvents onWillFocus={() => this.onFocus()} />				<Header style={styles.headerView}>					<Right style={{ flex: 0 }}>						<Button transparent onPress={() => this.props.navigation.goBack()}>							<Image source={require('../../assets/images/back.png')} resizeMode={'contain'} style={{ width: 25, height: 25 }}/>						</Button>					</Right>					<Body style={{ width: '100%', alignItems: 'center', alignSelf: 'center' }}>					<Text style={[styles.textBold, styles.text_White, { fontSize: 18, alignSelf: 'center' }]}>{ name }</Text>					</Body>					<Left style={{ flex: 0 }}>						<Image source={require('../../assets/images/vector.png')} resizeMode={'contain'} style={{ width: 100, height: 100, top: 5, right: -5 }}/>					</Left>				</Header>				<Content contentContainerStyle={styles.bgFullWidth}>					<View style={{ padding: 15 }}>						{							this.state.terms.map(( term, i ) => (								<Card key={i} style={{ width: '100%', padding: 10, borderRadius: 10 }}>									<TouchableOpacity onPress={() => this.props.navigation.navigate('courses', { id: term.id, name: term.name })}>										<Text style={[styles.textRegular, styles.textRight, { color: '#999', fontSize: 18, marginTop: 5 }]}>{ term.name }</Text>									</TouchableOpacity>								</Card>							))						}					</View>				</Content>			</Container>		);	}}const mapStateToProps = ({ auth, profile }) => {	return {		auth    : auth.user,		user    : profile.user	};};export default connect(mapStateToProps, {  })(Term);