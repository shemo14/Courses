import React, { Component } from "react";import { View, Text, Image, TouchableOpacity } from "react-native";import {Container, Content, Header, Button, Left, Body, Right, Card } from 'native-base'import styles from '../../assets/styles';import {NavigationEvents} from "react-navigation";import axios from "axios";import CONST from "../consts";import {connect} from "react-redux";import Spinner from "react-native-loading-spinner-overlay";class Replay extends Component {	constructor(props){		super(props);		this.state={			spinner    : true,			complaints : []		}	}	static navigationOptions = () => ({		header      : null,		drawerLabel : ({ focused }) => ( <Text style={[styles.textRegular, styles.textSize_18, { color: focused ? '#f6b549' : '#27336d' }]}>متابعة الشكوي</Text> ) ,		drawerIcon  : ({ focused }) => ( <Image style={[styles.smImage]} source={focused ? require('../../assets/images/yellow_message.png') : require('../../assets/images/blue_message.png')} resizeMode={'cover'}/>)	});	componentWillMount() {		this.setState({ spinner  : true });		axios({			url         : CONST.url + 'complaints',			method      : 'POST',			headers     : { Authorization: this.props.user.token },		}).then(response => {			this.setState({ spinner  : false, complaints: response.data.data });		});	}	onFocus(){	}	render() {		return (			<Container>				<Spinner visible = { this.state.spinner } />				<NavigationEvents onWillFocus={() => this.onFocus()} />				<Header style={styles.headerView}>					<Right style={{ flex: 0 }}>						<Button transparent onPress={() => this.props.navigation.goBack()}>							<Image source={require('../../assets/images/back.png')} resizeMode={'contain'} style={{ width: 25, height: 25 }}/>						</Button>					</Right>					<Body style={{ width: '100%', alignItems: 'center', alignSelf: 'center' }}>					<Text style={[styles.textBold, styles.text_White, { fontSize: 18, alignSelf: 'center' }]}>متابعة الشكوي</Text>					</Body>					<Left style={{ flex: 0 }}>						<Image source={require('../../assets/images/vector.png')} resizeMode={'contain'} style={{ width: 100, height: 100, top: 5, right: -5 }}/>					</Left>				</Header>				<Content contentContainerStyle={styles.bgFullWidth}>					<View style={{ padding: 15 }}>						{							this.state.complaints.map(( complaint, i ) => (								<View key={i}>									<Card style={{ width: '100%', padding: 10, borderRadius: 10 }}>										<TouchableOpacity>											<Text style={[styles.textRegular, styles.textRight, { color: '#000', fontSize: 18, marginTop: 5 }]}>{ complaint.complaint }</Text>										</TouchableOpacity>									</Card>									<View>										{											complaint.replay.map(( replay, j ) => (												<Text key={j} style={[styles.textRegular, styles.textRight, { color: '#999', fontSize: 18, marginHorizontal: 5, marginTop: 3 }]}> - { replay }</Text>											))										}									</View>								</View>							))						}					</View>				</Content>			</Container>		);	}}const mapStateToProps = ({ auth, profile }) => {	return {		auth    : auth.user,		user    : profile.user	};};export default connect(mapStateToProps, {  })(Replay);