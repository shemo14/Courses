import React, { Component } from "react";import { View, Text, Image, TouchableOpacity, Platform, Dimensions, I18nManager, KeyboardAvoidingView } from "react-native";import {	Container,	Content,	Header,	Button,	Left,	Body,	Right,	Radio,	Card, Toast} from 'native-base'import styles from '../../assets/styles';import {NavigationEvents} from "react-navigation";import axios from "axios";import CONST from "../consts";import Spinner from "react-native-loading-spinner-overlay";import {connect} from "react-redux";import Answers from './Answers'let ansArr = [];class Quiz extends Component {	constructor(props){		super(props);		this.state={			ques			: [],			ansArr,			lectureId		: null,			spinner     	: false,			categoryName  	: '',		}	}	componentWillMount() {		ansArr = [];		this.setState({ spinner  : true, ansArr: [] });		const { id } = this.props.navigation.state.params;		axios({			url         : CONST.url + 'lecture_questions',			method      : 'POST',			data		: { lecture_id: id },			headers     : { Authorization: this.props.user.token },		}).then(response => {			this.setState({ spinner: false, ques: response.data.data, categoryName: response.data.extra.category_name })		});	}	onFocus(){		this.componentWillMount()	}	setAns(id){		if (ansArr.includes(id)){			const index = ansArr.indexOf(id);			ansArr.splice(index, 1);		} else ansArr.push(id);		this.setState({ ansArr });	}	renderSubmit() {		if (ansArr.length == 0) {			return (				<TouchableOpacity style={[ styles.Width_90, styles.flexCenter, styles.flexCenter, styles.marginVertical_15, styles.height_50 , {					backgroundColor:'#999', borderRadius: 10				}]}				>					<Text style={[styles.textRegular, styles.textSize_16, styles.text_White]}>ارسال</Text>				</TouchableOpacity>			);		}		return (			<TouchableOpacity				style={[ styles.Width_90, styles.flexCenter, styles.flexCenter, styles.marginVertical_15, styles.height_50, { borderRadius: 10, backgroundColor: '#f6b145' }]}				onPress={() => this.onSendMsg()}>				<Text style={[styles.textRegular, styles.textSize_16, styles.text_White]}>ارسال</Text>			</TouchableOpacity>		);	}	completeQuiz(){		const { id, exTime } = this.props.navigation.state.params;		if (ansArr.length == 0){			Toast.show({				text: 'يجب الاجابة علي سؤال واحد كحد ادني',				type: "danger",				duration: 3000,				textStyle: {					color: "#fff",					fontFamily: 'sukar',					textAlign: 'center',				}			});		} else{			this.setState({ spinner  : true });			axios({				url         : CONST.url + 'complete_task',				method      : 'POST',				data		: { results : this.state.ansArr, lecture_id: id},				headers     : { Authorization: this.props.user.token },			}).then(response => {				this.setState({ spinner  : false });				this.props.navigation.navigate('video', { lecture: response.data.data.next_lecture, exTime });				Toast.show({					text: response.data.message,					type: "success",					duration: 3000,					textStyle: {						color: "#fff",						fontFamily: 'sukar',						textAlign: 'center',					}				});			});		}	}	render() {		return (			<Container>				<Spinner visible = { this.state.spinner } />				<NavigationEvents onWillFocus={() => this.onFocus()} />				<Header style={styles.headerView}>					<Right style={{ flex: 0 }}>						<Button transparent onPress={() => this.props.navigation.goBack()}>							<Image source={require('../../assets/images/back.png')} resizeMode={'contain'} style={{ width: 25, height: 25 }}/>						</Button>					</Right>					<Body style={{ width: '100%', alignItems: 'center', alignSelf: 'center' }}>					<Text style={[styles.textBold, styles.text_White, { fontSize: 18, alignSelf: 'center' }]}>{ this.state.categoryName }</Text>					</Body>					<Left style={{ flex: 0 }}>						<Image source={require('../../assets/images/vector.png')} resizeMode={'contain'} style={{ width: 100, height: 100, top: 5, right: -5 }}/>					</Left>				</Header>				<Content contentContainerStyle={styles.bgFullWidth}>					<View style={{ padding: 15 }}>						<Text style={[styles.textRegular, styles.textRight, { color: '#999', fontSize: 18, marginVertical: 5, textAlign: 'center', width: '80%', alignSelf: 'center' }]}>لابد من الاجابة علي الاسئلة التالية للوصول للفيديو التالي</Text>						{							this.state.ques.map(( qu, i ) => (								<View>									<Card key={i} style={{ width: '100%', padding: 10, borderRadius: 10 }}>										<TouchableOpacity onPress={() => this.props.navigation.navigate('courses', { id: term.id, name: term.name, expiration: this.state.expiration })}>											<Text style={[styles.textRegular, styles.textRight, { color: '#000', fontSize: 18, marginTop: 5 }]}>{ qu.question }</Text>										</TouchableOpacity>									</Card>									<View>										<Answers setAns={(id) => this.setAns(id)} answers={qu.answers}/>									</View>								</View>							))						}						<TouchableOpacity							style={[ styles.Width_90, styles.flexCenter, styles.flexCenter, styles.marginVertical_15, styles.height_50, { borderRadius: 10, backgroundColor: '#f6b145' }]}							onPress={() => this.completeQuiz()}>							<Text style={[styles.textRegular, styles.textSize_16, styles.text_White]}>استكمال</Text>						</TouchableOpacity>					</View>				</Content>			</Container>		);	}}const mapStateToProps = ({ auth, profile }) => {	return {		auth    : auth.user,		user    : profile.user	};};export default connect(mapStateToProps, {  })(Quiz);