import React, { Component } from "react";import { View, Text, Image, TouchableOpacity, Platform, Dimensions, I18nManager, KeyboardAvoidingView } from "react-native";import {	Container,	Content,	Header,	Button,	Left,	Body,	Right,	Item,	Input,	Form,	Label,	Textarea,	Toast} from 'native-base'import styles from '../../assets/styles';import COLORS from "../consts/colors";import {NavigationEvents} from "react-navigation";import axios from "axios";import CONST from "../consts";import Spinner from "react-native-loading-spinner-overlay";import {connect} from "react-redux";class Complaint extends Component {	constructor(props){		super(props);		this.state={			name      	: '',			email      	: '',			msg      	: '',			nameStatus  : '',			emailStatus : '',			msgStatus   : '',			spinner     : false,		}	}	activeInput(type) {		if (type === 'name' || this.state.name !== '') {			this.setState({nameStatus: 1})		}		if (type === 'email' || this.state.email !== '') {			this.setState({emailStatus: 1})		}		if (type === 'msg' || this.state.msg !== '') {			this.setState({msgStatus: 1})		}	}	unActiveInput(type) {		if (type === 'name' || this.state.name === '') {			this.setState({nameStatus: 0})		}		if (type === 'email' || this.state.email === '') {			this.setState({emailStatus: 0})		}		if (type === 'msg' || this.state.msg === '') {			this.setState({msgStatus: 0})		}	}	static navigationOptions = () => ({		header      : null,		drawerLabel : ({ focused }) => ( <Text style={[styles.textRegular, styles.textSize_18, { color: focused ? '#f6b549' : '#27336d' }]}>ارسال شكوي</Text> ) ,		drawerIcon  : ({ focused }) => ( <Image style={[styles.smImage]} source={focused ? require('../../assets/images/yellow_complain.png') : require('../../assets/images/blue_complain.png')} resizeMode={'contain'}/>)	});	onFocus(){	}	onSendMsg(){		this.setState({ spinner  : true });		axios({			url         : CONST.url + 'complaint',			method      : 'POST',			data		: { name : this.state.name, email: this.state.email, details: this.state.msg},			headers     : { Authorization: this.props.user.token },		}).then(response => {			this.setState({ spinner  : false, name: '', email: '', msg: '' });			Toast.show({				text: response.data.message,				type: "success",				duration: 3000,				textStyle: {					color: "#fff",					fontFamily: 'sukar',					textAlign: 'center',				}			});		});	}	renderSubmit() {		if (this.state.name == '' || this.state.email == '' || this.state.msg == '') {			return (				<TouchableOpacity style={[ styles.Width_90, styles.flexCenter, styles.flexCenter, styles.marginVertical_15, styles.height_50 , {					backgroundColor:'#999', borderRadius: 10				}]}				>					<Text style={[styles.textRegular, styles.textSize_16, styles.text_White]}>ارسال</Text>				</TouchableOpacity>			);		}		return (			<TouchableOpacity				style={[ styles.Width_90, styles.flexCenter, styles.flexCenter, styles.marginVertical_15, styles.height_50, { borderRadius: 10, backgroundColor: '#f6b145' }]}				onPress={() => this.onSendMsg()}>				<Text style={[styles.textRegular, styles.textSize_16, styles.text_White]}>ارسال</Text>			</TouchableOpacity>		);	}	render() {		return (			<Container>				<Spinner visible = { this.state.spinner } />				<NavigationEvents onWillFocus={() => this.onFocus()} />				<Header style={styles.headerView}>					<Right style={{ flex: 0 }}>						<Button transparent onPress={() => this.props.navigation.goBack()}>							<Image source={require('../../assets/images/back.png')} resizeMode={'contain'} style={{ width: 25, height: 25 }}/>						</Button>					</Right>					<Body style={{ width: '100%', alignItems: 'center', alignSelf: 'center' }}>					<Text style={[styles.textBold, styles.text_White, { fontSize: 18, alignSelf: 'center' }]}>ارسال شكوي</Text>					</Body>					<Left style={{ flex: 0 }}>						<Image source={require('../../assets/images/vector.png')} resizeMode={'contain'} style={{ width: 100, height: 100, top: 5, right: -5 }}/>					</Left>				</Header>				<Content contentContainerStyle={styles.bgFullWidth}>					<View style={[styles.position_R, styles.bgFullWidth, styles.marginVertical_15, styles.marginVertical_25, styles.Width_100, styles.centerColum]}>						<KeyboardAvoidingView behavior={'padding'} style={styles.keyboardAvoid}>							<Form style={[styles.Width_100, styles.flexCenter, styles.marginVertical_10, styles.Width_90]}>								<View style={[styles.position_R, styles.height_70, styles.flexCenter, styles.marginBottom_5 ]}>									<Item floatingLabel style={[styles.item, styles.position_R, { right: 5 }]}>										<Label style={[styles.label, styles.textRegular ,{ color:this.state.nameStatus === 1 ?  COLORS.blue :  COLORS.gray}]}>الاسم بالكامل</Label>										<Input value={this.state.name} style={[styles.input, styles.height_50, (this.state.nameStatus === 1 ? styles.Active : styles.noActive)]}											onChangeText={(name) => this.setState({name})}											onBlur={()  => this.unActiveInput('name')}											onFocus={() => this.activeInput('name')}										/>									</Item>								</View>								<View style={[styles.position_R,  styles.height_70, styles.flexCenter]}>									<Item floatingLabel style={[styles.item, styles.position_R, { right: 5 }]}>										<Label style={[styles.label ,{ color:this.state.emailStatus === 1 ?  COLORS.blue :  COLORS.gray}]}>البريد الالكتروني</Label>										<Input value={this.state.email}											style={[styles.input, styles.height_50, (this.state.emailStatus === 1 ? styles.Active : styles.noActive)]}											onChangeText={(email) => this.setState({email})}											onBlur={()  => this.unActiveInput('email')}											onFocus={() => this.activeInput('email')}										/>									</Item>								</View>								<View style={[styles.position_R,  styles.height_70, styles.flexCenter, { marginTop: 15 }]}>									<Item style={[styles.item, styles.position_R, { right: 5 }]}>										<Textarea value={this.state.msg}											placeholder={'نص الشكوي'} bordered={false}											style={[styles.textArea, styles.height_80, (this.state.msgStatus === 1 ? styles.Active : styles.noActive)]}											onChangeText={(msg) => this.setState({msg})}											onBlur={()  => this.unActiveInput('msg')}											onFocus={() => this.activeInput('msg')}										/>									</Item>								</View>								{this.renderSubmit()}							</Form>						</KeyboardAvoidingView>					</View>				</Content>			</Container>		);	}}const mapStateToProps = ({ auth, profile }) => {	return {		auth    : auth.user,		user    : profile.user	};};export default connect(mapStateToProps, {  })(Complaint);